apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cf-kafka-rest.fullname" . }}
  labels:
    {{- include "cf-kafka-rest.labels" . | nindent 4 }}
  {{- if .Values.annotations }}
  annotations: {{ toYaml .Values.annotations | nindent 4 }}
  {{- end }}

spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cf-kafka-rest.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cf-kafka-rest.selectorLabels" . | nindent 8 }}
      {{- if .Values.podAnnotations }}
      annotations: {{ toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}

    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- if or .Values.podSecurityContext .Values.sysctls }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
        {{- if .Values.sysctls }}
        sysctls:
        {{- range $sysctl, $value := .Values.sysctls }}
          - name: {{ $sysctl | quote }}
            value: {{ $value | quote }}
        {{- end }}
        {{- end }}
      {{- end }}
      initContainers:
        - name: prepare-config
          image: busybox
          command:
            - sh
            - -c
            - |
              # Source configuration file
              SRC_CONF="/etc/kafka-rest-config-base/kafka-rest.properties"

              # Read the source file, update the password, and write to the destination
              sed "s/password=\".*\"/password=\"$KAFKA_CLIENT_PASSWORD\"/" "$SRC_CONF" > /etc/kafka-rest/kafka-rest-s1.properties
              
              sed "s/bootstrap.servers=.*$/bootstrap.servers={{ .Values.cp_kafka.bootstrapServers | join ":9096," | printf "%s:9096"  }}/" /etc/kafka-rest/kafka-rest-s1.properties > /etc/kafka-rest/kafka-rest.properties
              cp /etc/kafka-rest-config-base/log4j.properties /etc/kafka-rest/

          securityContext:
            {{- toYaml .Values.initSecurityContext | nindent 12 }}
          env:
            - name: KAFKA_CLIENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "cf-kafka-rest.fullname" . }}
                  key: client_password
          volumeMounts:
            - name: proxy-config-base
              mountPath: /etc/kafka-rest-config-base
            - name: proxy-config
              mountPath: /etc/kafka-rest
          resources:
            limits:
              cpu: 32m
              memory: 32Mi
            requests:
              cpu: 32m
              memory: 32Mi
      containers:
        - name: cf-kafka-rest
          image: "{{ .Values.image }}:{{ .Values.imageTag | default .Chart.AppVersion }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"          
          command:
          - /bin/sh
          - -c
          - /usr/bin/kafka-rest-start /etc/kafka-rest/kafka-rest.properties 
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}   
          ports:
            - name: rest-proxy
              containerPort: {{ .Values.service.port}}
              protocol: TCP
            - name: jmx
              containerPort: 5555
              protocol: TCP
          {{- if .Values.startupProbe }}
          startupProbe: 
            {{ toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe: 
            {{ toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe: 
            {{ toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources: 
            {{ toYaml .Values.resources | nindent 12 }}
          {{- end }}
          env:
          - name: KAFKA_REST_HOST_NAME
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: KAFKAREST_HEAP_OPTS
            value: "{{ .Values.heapOptions }}"
          {{- range $key, $value := .Values.configurationOverrides }}
          - name: {{ printf "KAFKA_REST_%s" $key | replace "." "_" | upper | quote }}
            value: {{ $value | quote }}
          {{- end }}
          {{- range $key, $value := .Values.customEnv }}
          - name: {{ $key | quote }}
            value: {{ $value | quote }}
          {{- end }}            
          volumeMounts:
            - name: proxy-config
              mountPath: /etc/kafka-rest
            - name: proxy-log
              mountPath: /var/log/kafka-rest
          {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{- toYaml .Values.extraContainers | nindent 8 }}
      {{- end }}
      {{- if .Values.extraInitContainers }}
      initContainers:
        {{- toYaml .Values.extraInitContainers | nindent 8 }}
      {{- end }}      
      serviceAccountName: {{ template "cf-kafka-rest.serviceAccountName" . }}
            
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      volumes:
      - name: proxy-config-base
        configMap:
          name: {{ include "cf-kafka-rest.fullname" . }}
      - name: proxy-config
        emptyDir:
          sizeLimit: 20Mi
      - name: proxy-log
        emptyDir:
          sizeLimit: 200Mi
      {{- if .Values.extraVolumes }}
      {{- toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
      {{- toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
      {{- toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints.enabled }}
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            {{- include "cf-kafka-rest.selectorLabels" . | nindent 12 }}
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            {{- include "cf-kafka-rest.selectorLabels" . | nindent 12 }}
      {{- end }}